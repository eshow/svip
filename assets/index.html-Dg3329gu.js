import{_ as s,c as a,a as i,o as n}from"./app-DHGoFUDo.js";const l={};function d(t,e){return n(),a("div",null,e[0]||(e[0]=[i(`<h3 id="_1-项目需求分析" tabindex="-1"><a class="header-anchor" href="#_1-项目需求分析"><span>1. 项目需求分析</span></a></h3><p><strong>需求分析</strong>：</p><ul><li><strong>消息传递</strong>：需要可靠的消息传递机制，确保消息不会丢失。</li><li><strong>发布和订阅</strong>：需要支持发布者将消息发送到队列，订阅者从队列中接收消息。</li><li><strong>消息持久化</strong>：消息需要持久化，以便在系统重启后恢复消息队列。</li><li><strong>多消费者</strong>：需要支持多个消费者同时从队列中读取消息。</li></ul><h3 id="_2-使用list和pub-sub实现消息队列" tabindex="-1"><a class="header-anchor" href="#_2-使用list和pub-sub实现消息队列"><span>2. 使用List和Pub/Sub实现消息队列</span></a></h3><h4 id="使用list实现消息队列" tabindex="-1"><a class="header-anchor" href="#使用list实现消息队列"><span>使用List实现消息队列</span></a></h4><p>使用List实现消息队列的方法如下：</p><ul><li><strong>生产者</strong>将消息推送到列表的末尾。</li><li><strong>消费者</strong>从列表的头部弹出消息。</li></ul><h5 id="发布消息-生产者" tabindex="-1"><a class="header-anchor" href="#发布消息-生产者"><span>发布消息（生产者）</span></a></h5><p>使用<code>LPUSH</code>将消息推入列表：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>LPUSH messageQueue &quot;Message 1&quot;</span></span>
<span class="line"><span>LPUSH messageQueue &quot;Message 2&quot;</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="订阅消息-消费者" tabindex="-1"><a class="header-anchor" href="#订阅消息-消费者"><span>订阅消息（消费者）</span></a></h5><p>使用<code>RPOP</code>从列表中弹出消息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>RPOP messageQueue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用pub-sub实现消息队列" tabindex="-1"><a class="header-anchor" href="#使用pub-sub实现消息队列"><span>使用Pub/Sub实现消息队列</span></a></h4><p>使用Pub/Sub实现消息队列的方法如下：</p><ul><li><strong>发布者</strong>将消息发布到频道。</li><li><strong>订阅者</strong>订阅频道并接收消息。</li></ul><h5 id="发布消息-发布者" tabindex="-1"><a class="header-anchor" href="#发布消息-发布者"><span>发布消息（发布者）</span></a></h5><p>使用<code>PUBLISH</code>将消息发布到频道：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>PUBLISH messageChannel &quot;Message 1&quot;</span></span>
<span class="line"><span>PUBLISH messageChannel &quot;Message 2&quot;</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="订阅消息-订阅者" tabindex="-1"><a class="header-anchor" href="#订阅消息-订阅者"><span>订阅消息（订阅者）</span></a></h5><p>使用<code>SUBSCRIBE</code>订阅频道并接收消息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>SUBSCRIBE messageChannel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-发布和订阅消息" tabindex="-1"><a class="header-anchor" href="#_3-发布和订阅消息"><span>3. 发布和订阅消息</span></a></h3><h4 id="使用list实现消息发布和消费" tabindex="-1"><a class="header-anchor" href="#使用list实现消息发布和消费"><span>使用List实现消息发布和消费</span></a></h4><ol><li><p><strong>生产者</strong>使用<code>LPUSH</code>将消息推送到队列中：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>LPUSH messageQueue &quot;Message 1&quot;</span></span>
<span class="line"><span>LPUSH messageQueue &quot;Message 2&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>消费者</strong>使用<code>RPOP</code>从队列中弹出消息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>RPOP messageQueue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h4 id="使用pub-sub实现消息发布和订阅" tabindex="-1"><a class="header-anchor" href="#使用pub-sub实现消息发布和订阅"><span>使用Pub/Sub实现消息发布和订阅</span></a></h4><ol><li><p><strong>发布者</strong>使用<code>PUBLISH</code>将消息发布到频道：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>PUBLISH messageChannel &quot;Message 1&quot;</span></span>
<span class="line"><span>PUBLISH messageChannel &quot;Message 2&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>订阅者</strong>使用<code>SUBSCRIBE</code>订阅频道并接收消息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>SUBSCRIBE messageChannel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_4-消息队列的持久化和恢复" tabindex="-1"><a class="header-anchor" href="#_4-消息队列的持久化和恢复"><span>4. 消息队列的持久化和恢复</span></a></h3><p>​ Redis本身支持持久化，通过配置RDB（快照）或AOF（Append Only File）来实现。</p><h4 id="配置redis持久化" tabindex="-1"><a class="header-anchor" href="#配置redis持久化"><span>配置Redis持久化</span></a></h4><p>在<code>redis.conf</code>中，启用持久化配置：</p><ul><li><p><strong>RDB持久化</strong>：在一定间隔时间内保存数据快照。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>plaintext复制代码save 900 1</span></span>
<span class="line"><span>save 300 10</span></span>
<span class="line"><span>save 60 10000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>AOF持久化</strong>：记录每个写操作，重启时重放日志以恢复数据。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>plaintext复制代码appendonly yes</span></span>
<span class="line"><span>appendfilename &quot;appendonly.aof&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>通过这两种方式，可以确保Redis中的数据在系统重启后恢复。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>通过以上步骤，您可以使用Redis实现一个简单的消息队列系统，支持消息的发布、订阅、持久化和恢复：</p><ol><li>使用<code>LPUSH</code>和<code>RPOP</code>命令实现基于List的消息队列。</li><li>使用<code>PUBLISH</code>和<code>SUBSCRIBE</code>命令实现基于Pub/Sub的消息队列。</li><li>配置Redis持久化（RDB和AOF）来保证消息的持久化和恢复。</li></ol>`,36)]))}const h=s(l,[["render",d]]),c=JSON.parse('{"path":"/docker/xmdnaom7/","title":"消息队列系统","lang":"zh-CN","frontmatter":{"title":"消息队列系统","createTime":"2025/07/23 11:13:45","permalink":"/docker/xmdnaom7/"},"readingTime":{"minutes":2.3,"words":689},"git":{"createdTime":1754385901000,"updatedTime":1754385901000,"contributors":[{"name":"elvishehai521@163.com","username":"","email":"elvishehai521@163.com","commits":1,"avatar":"https://gravatar.com/avatar/6a640db68c5bf3768af7413cb28623721edb88b0f88957ed42c162769c5f659c?d=retro"}]},"filePathRelative":"notes/docker/消息队列系统.md","headers":[]}');export{h as comp,c as data};
