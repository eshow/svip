import{_ as n,c as a,a as e,o as i}from"./app-DHGoFUDo.js";const l="/svip/assets/Dockerfile%E6%9E%84%E5%BB%BA%E6%AD%A5%E9%AA%A4-DG904mhI.png",p="/svip/assets/Dockerfile%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B-Buf6lSQJ.png",d="/svip/assets/02%E4%B8%89%E8%80%85%E5%85%B3%E7%B3%BB-CVNoyDYm.png",c="/svip/assets/01%E4%B8%8A%E4%BC%A0jar-Cvn7lqVX.png",t="/svip/assets/02%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93-CL8jsh8z.png",r="/svip/assets/03%E5%90%8E%E5%8F%B0%E7%99%BB%E5%BD%95-CyEIWhY2.png",u="/svip/assets/04%E6%A3%80%E6%9F%A5%E9%A1%B9%E5%88%97%E8%A1%A8-CRhOHbLn.png",v="/svip/assets/08%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%A6%96%E9%A1%B5-Bx73XyZ3.png",o="/svip/assets/09%E5%A5%97%E9%A4%90%E5%88%97%E8%A1%A8-CJE93Z69.png",b={};function m(h,s){return i(),a("div",null,s[0]||(s[0]=[e('<h2 id="任务目标" tabindex="-1"><a class="header-anchor" href="#任务目标"><span>任务目标</span></a></h2><ul><li>理解 Dockerfile 的定义、组成及构建流程</li><li>学习并应用Dockerfile核心指令</li><li>灵活运用指令组合，实现文件复制、环境变量、端口声明及数据持久化等常见需求</li><li>掌握 SpringBoot 项目 Docker 部署全流程</li></ul><h2 id="任务单元" tabindex="-1"><a class="header-anchor" href="#任务单元"><span>任务单元</span></a></h2><h3 id="任务一-理解dockerfile基础与构建流程" tabindex="-1"><a class="header-anchor" href="#任务一-理解dockerfile基础与构建流程"><span>任务一：理解Dockerfile基础与构建流程</span></a></h3><h4 id="_1-1-任务描述" tabindex="-1"><a class="header-anchor" href="#_1-1-任务描述"><span>1-1 任务描述</span></a></h4><p>本任务旨在引导我们掌握Dockerfile的核心概念和构建机制。通过实际操作，我们将理解Dockerfile的文件组成（基础镜像、操作指令、启动命令）和构建三步骤（编写→构建→运行）。最终，我们能够编写基础Dockerfile（使用FROM/RUN指令），构建自定义Ubuntu镜像（含nano工具），并通过容器验证构建效果。</p><h4 id="_1-2-必备知识点" tabindex="-1"><a class="header-anchor" href="#_1-2-必备知识点"><span>1-2 必备知识点</span></a></h4><h5 id="_4-1-1-dockerfile是什么" tabindex="-1"><a class="header-anchor" href="#_4-1-1-dockerfile是什么"><span>4.1.1 Dockerfile是什么</span></a></h5><p>Docker官方提供的镜像已经可以适用于大多数应用程序。如果我们想构建属于自己的业务镜像，这个时候需要自定义镜像。自定义镜像使用Dockerfile。</p><p>DockerFile是用来构建Docker镜像的文本文件，是一条条构建镜像所需要的指令和参数构成的脚本。</p><p>Dockerfile的主要作用是自动化构建Docker镜像，通过编写Dockerfile，我们可以将应用的构建、配置和运行步骤打包到一个可移植的文件中，方便在不同的环境中快速部署。</p><h5 id="_4-1-2-dockerfile文件组成" tabindex="-1"><a class="header-anchor" href="#_4-1-2-dockerfile文件组成"><span>4.1.2 Dockerfile文件组成</span></a></h5><p>一个dockerfile文件包含以下部分：</p><ul><li>基础镜像信息： 使用FROM关键字指定基础镜像信息，FROM是dockerfile文件的第一条指令。</li><li>镜像操作指令： 每执行一条镜像操作指令，都会在镜像中添加新的一层。</li><li>容器启动执行命令： 用户指定在启动容器时需要执行的命令，通过：CMD ENTRYPOINT指定。</li></ul><p>DockerFile文件内容规范：</p><p>（1）每条保留字指令都必须为大写字母且后面要跟随至少一个参数</p><p>（2）指令按照从上向下，顺序执行</p><p>（3）#表示注释</p><p>（4）每个指令都会创建一个新的镜像层并且对于镜像进行提交</p><h5 id="_4-1-3-dockerfile构建步骤" tabindex="-1"><a class="header-anchor" href="#_4-1-3-dockerfile构建步骤"><span>4.1.3 Dockerfile构建步骤</span></a></h5><p><strong>1.构建三步骤</strong></p><p>（1）编写DockerFile文件</p><p>（2）Docker build命令构建镜像</p><p>（3）docker run 依据镜像运行容器实例</p><p><img src="'+l+'" alt="image-20240724151336858"></p><p><strong>2.Dockerfile执行流程</strong></p><p>（1）Docker从基础镜像运行一个容器</p><p>（2）执行一条指令并且对于容器做出修改</p><p>（3）执行类似docker commit的操作提交一个新的镜像层</p><p>（4）Docker再基于刚提交的镜像运行一个新的容器</p><p>（5）执行DockeFile 中的下一条指令直到所有指令都执行完成</p><p><img src="'+p+'" alt="image-20240724151336858"></p><p><strong>3.Dockerfile、Docker镜像、Docker容器</strong></p><p>从应用软件的角度而言，DockerFile，Docker镜像和Docker容器分别代表了软件的三个不同阶段</p><ul><li>DockerFile是软件的原材料</li><li>Docker镜像是软件的交付品</li><li>Docker容器则可以认为是软件镜像的运行状态，也是依照镜像运行的容器实例</li></ul><p><strong>DockerFile面向开发，Docker镜像成为交付标准，Docker容器则涉及部署和运维，三者缺一不可，合理充当Docker体系的基石！</strong></p><p><img src="'+d+`" alt=""></p><h4 id="_1-3-任务实施" tabindex="-1"><a class="header-anchor" href="#_1-3-任务实施"><span>1-3 任务实施</span></a></h4><p><strong>（1）理解 Dockerfile 基础</strong>：明确 Dockerfile 是构建镜像的文本文件，包含基础镜像信息、操作指令和启动命令，构建流程为 “编写文件→构建镜像→运行容器”。</p><p><strong>（2）编写基础 Dockerfile：</strong></p><ul><li>创建工作目录：<code>mkdir myfirstdocker &amp;&amp; cd myfirstdocker</code></li><li>创建 Dockerfile：<code>touch Dockerfile</code></li><li>编辑 Dockerfile，使用 FROM 指定基础镜像，RUN 指令安装 nano 工具：</li></ul><p>（a）创建Dockerfile</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# mkdir myfirstdocker</span></span>
<span class="line"><span>root@hp-None:~# ls</span></span>
<span class="line"><span>data  hp  myfirstdocker  nginxconfig  RUNNING.txt  snap</span></span>
<span class="line"><span>root@hp-None:~# cd myfirstdocker/</span></span>
<span class="line"><span>root@hp-None:~/myfirstdocker# touch Dockerfile</span></span>
<span class="line"><span>root@hp-None:~/myfirstdocker# ls</span></span>
<span class="line"><span>Dockerfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（b）编写Dockerfile</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FROM ubuntu:latest</span></span>
<span class="line"><span>RUN apt-get update</span></span>
<span class="line"><span>RUN apt-get install -y nano</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（c）构建镜像</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/myfirstdocker# docker build -t myubuntu:01 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  2.048kB</span></span>
<span class="line"><span>Step 1/3 : FROM ubuntu:latest</span></span>
<span class="line"><span>latest: Pulling from library/ubuntu</span></span>
<span class="line"><span>32f112e3802c: Already exists </span></span>
<span class="line"><span>Digest: sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061</span></span>
<span class="line"><span>Status: Downloaded newer image for ubuntu:latest</span></span>
<span class="line"><span> ---&gt; 65ae7a6f3544</span></span>
<span class="line"><span>Step 2/3 : RUN apt-get update</span></span>
<span class="line"><span> ---&gt; Running in 8cba11e28a44</span></span>
<span class="line"><span>Get:1 http://archive.ubuntu.com/ubuntu noble InRelease [256 kB]</span></span>
<span class="line"><span>Get:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]</span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（d）验证结果</p><p>运行容器docker run -it myubuntu:01，在容器内执行nano test.txt，检查 nano 是否可正常使用。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it myubuntu:01</span></span>
<span class="line"><span>root@196d63fc14cc:/# nano text.txt</span></span>
<span class="line"><span>root@196d63fc14cc:/#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入容器后执行<code>nano test.txt</code>，若能打开编辑界面则成功。</p><h3 id="任务二-掌握-dockerfile-核心指令的使用" tabindex="-1"><a class="header-anchor" href="#任务二-掌握-dockerfile-核心指令的使用"><span>任务二：掌握 Dockerfile 核心指令的使用</span></a></h3><h4 id="_2-1-任务描述" tabindex="-1"><a class="header-anchor" href="#_2-1-任务描述"><span>2-1 任务描述</span></a></h4><p>本任务旨在指导我们熟练应用关键Docker指令。通过编写包含多指令的Dockerfile，我们将实现：设置工作目录、复制文件、配置环境变量、声明数据卷和暴露端口。最终，我们将构建镜像并通过容器验证各指令效果（目录结构/文件复制/环境变量/挂载点）。</p><h4 id="_2-2-必备知识点" tabindex="-1"><a class="header-anchor" href="#_2-2-必备知识点"><span>2-2 必备知识点</span></a></h4><h5 id="_4-2-1-dockerfile基本指令" tabindex="-1"><a class="header-anchor" href="#_4-2-1-dockerfile基本指令"><span>4.2.1 Dockerfile基本指令</span></a></h5><p>看看ubuntu系统</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#拉取ubuntu</span></span>
<span class="line"><span>root@hp-None:~# docker pull ubuntu:latest</span></span>
<span class="line"><span>latest: Pulling from library/ubuntu</span></span>
<span class="line"><span>7b1a6ab2e44d: Pull complete </span></span>
<span class="line"><span>Digest: sha256:626ffe58f6e7566e00254b638eb7e0f3b11d4da9675088f4781a50ae288f3322</span></span>
<span class="line"><span>Status: Downloaded newer image for ubuntu:latest</span></span>
<span class="line"><span>docker.io/library/ubuntu:latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#进入系统</span></span>
<span class="line"><span>root@hp-None:~# docker run -d ubuntu:latest</span></span>
<span class="line"><span>98b256eae2438c61ffeb98adf0fef57ee1a0c66033ba73ffd9b98a25b0479d2d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>root@hp-None:~# docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE           COMMAND                   CREATED        STATUS        PORTS                                                  NAMES</span></span>
<span class="line"><span>499518388cd8   app:1.0         &quot;java -jar app.jar&quot;       4 hours ago    Up 4 hours    9001/tcp, 0.0.0.0:9001-&gt;8088/tcp, :::9001-&gt;8088/tcp    webapp</span></span>
<span class="line"><span>d53a155b1dd1   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   29 hours ago   Up 29 hours   80/tcp, 0.0.0.0:8099-&gt;8088/tcp, :::8099-&gt;8088/tcp      nginx02</span></span>
<span class="line"><span>cc2fef6311e9   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   29 hours ago   Up 29 hours   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp                      nginx01</span></span>
<span class="line"><span>834a021d5e54   redis:6.0.9     &quot;docker-entrypoint.s…&quot;   32 hours ago   Up 32 hours   0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp              redis03</span></span>
<span class="line"><span>02e6eb10762f   mysql:8.0       &quot;docker-entrypoint.s…&quot;   2 days ago     Up 2 days     0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql8-02</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ubuntu系统运行就退出，我们可基于ubuntu系统构建。</p><p>常见的Dockerfile操作指令：</p><table><thead><tr><th style="text-align:center;">指令</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">FROM</td><td style="text-align:center;">基础镜像，一切从这里开始构建，第一个指令必须是FROM</td></tr><tr><td style="text-align:center;">RUN</td><td style="text-align:center;">镜像构建的时候需要运行的命令</td></tr><tr><td style="text-align:center;">EXPOSE</td><td style="text-align:center;">保留暴露的端口</td></tr><tr><td style="text-align:center;">ENV</td><td style="text-align:center;">构建的时候设置环境变量</td></tr><tr><td style="text-align:center;">ADD</td><td style="text-align:center;">添加内容： 比如加一个tomcat压缩包</td></tr><tr><td style="text-align:center;">COPY</td><td style="text-align:center;">类似ADD ，将我们的文件拷贝到镜像中</td></tr><tr><td style="text-align:center;">WORKDIR</td><td style="text-align:center;">镜像的工作目录</td></tr><tr><td style="text-align:center;">VOLUME</td><td style="text-align:center;">镜像挂载的目录</td></tr><tr><td style="text-align:center;">CMD</td><td style="text-align:center;">指定这个容器启动的时候要运行的命令，只有最后一个会生效，可以被代替</td></tr><tr><td style="text-align:center;">ENTRYPOINT</td><td style="text-align:center;">指定这个容器启动的时候需要运行的命令，可以追加命令</td></tr></tbody></table><p><strong>（1）FROM指令</strong></p><p>FROM指令用于指定基础镜像。一个有效的Dockerfile必须包含FROM指令，且必须是第一条非注释指令。</p><p>示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FROM ubuntu:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建myfile目录，在该目录下创建Dockerfile</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# mkdir myfile</span></span>
<span class="line"><span>root@hp-None:~# cd myfile/</span></span>
<span class="line"><span>root@hp-None:~/myfile# touch Dockerfile</span></span>
<span class="line"><span>root@hp-None:~/myfile# ls</span></span>
<span class="line"><span>Dockerfile</span></span>
<span class="line"><span>root@hp-None:~/myfile# nano Dockerfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写Dockerfile内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FROM ubuntu:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行docker build进行构建（需要注意，后面要加 .）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#执行docker build</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:01 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  2.048kB</span></span>
<span class="line"><span>Step 1/1 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>Successfully built ba6acccedd29</span></span>
<span class="line"><span>Successfully tagged myubuntu:01</span></span>
<span class="line"><span></span></span>
<span class="line"><span>root@hp-None:~# docker images</span></span>
<span class="line"><span>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span></span>
<span class="line"><span>app          1.0       3ed0eb4c44a5   5 hours ago   351MB</span></span>
<span class="line"><span>openjdk      8-jre     26ac3f63d29f   2 years ago   273MB</span></span>
<span class="line"><span>redis        latest    7614ae9453d1   2 years ago   113MB</span></span>
<span class="line"><span>mysql        8.0       3218b38490ce   2 years ago   516MB</span></span>
<span class="line"><span>ubuntu       latest    ba6acccedd29   2 years ago   72.8MB</span></span>
<span class="line"><span>myubuntu     01        ba6acccedd29   2 years ago   72.8MB</span></span>
<span class="line"><span>nginx        1.19.10   f0b8a9a54136   3 years ago   133MB</span></span>
<span class="line"><span>redis        6.0.9     6060df96cef3   3 years ago   104MB</span></span>
<span class="line"><span>tomcat       8.0       ef6a7c98d192   5 years ago   356MB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）RUN指令</strong></p><p>RUN指令用于在镜像构建过程中执行任何命令。这些命令通常用于安装软件包、设置环境变量等。</p><ul><li><p>第一种 shell格式</p><p>RUN apt-get install nano</p></li><li><p>第二种 exec格式</p><p>RUN [“可执行文件”,“参数1”,“参数2”]</p></li></ul><p>运行前面拉取的ubuntu:latest，进入容器，创建文件，提示没有nano命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it ubuntu:latest</span></span>
<span class="line"><span>root@aad734a7bd04:/# nano abc.txt</span></span>
<span class="line"><span>bash: nano: command not found</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行更新，再安装nano</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#执行更新</span></span>
<span class="line"><span>root@aad734a7bd04:/# apt-get update</span></span>
<span class="line"><span>Get:1 http://security.ubuntu.com/ubuntu focal-security InRelease [128 kB]</span></span>
<span class="line"><span>Get:2 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]</span></span>
<span class="line"><span>Get:3 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [3780 kB]</span></span>
<span class="line"><span>......                                                                                                                                                </span></span>
<span class="line"><span>Reading package lists... Done</span></span>
<span class="line"><span>Building dependency tree       </span></span>
<span class="line"><span>Reading state information... Done</span></span>
<span class="line"><span>51 packages can be upgraded. Run &#39;apt list --upgradable&#39; to see them.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#安装nano</span></span>
<span class="line"><span>root@aad734a7bd04:/# apt-get install nano</span></span>
<span class="line"><span>Reading package lists... Done</span></span>
<span class="line"><span>Building dependency tree       </span></span>
<span class="line"><span>Reading state information... Done</span></span>
<span class="line"><span>Suggested packages:</span></span>
<span class="line"><span>  hunspell</span></span>
<span class="line"><span>The following NEW packages will be installed:</span></span>
<span class="line"><span>  nano</span></span>
<span class="line"><span>0 upgraded, 1 newly installed, 0 to remove and 51 not upgraded.</span></span>
<span class="line"><span>Need to get 269 kB of archives.</span></span>
<span class="line"><span>After this operation, 868 kB of additional disk space will be used.</span></span>
<span class="line"><span>Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 nano amd64 4.8-1ubuntu1 [269 kB]</span></span>
<span class="line"><span>Fetched 269 kB in 2s (128 kB/s)</span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们希望构建的ubuntu系统安装nano，可以使用RUN指令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>RUN apt-get update</span></span>
<span class="line"><span>RUN apt-get install nano</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#构建镜像</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:02 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  2.048kB</span></span>
<span class="line"><span>Step 1/3 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>Step 2/3 : RUN apt update</span></span>
<span class="line"><span> ---&gt; Running in 8b9d08053490</span></span>
<span class="line"><span> ......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker images</span></span>
<span class="line"><span>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span></span>
<span class="line"><span>myubuntu     02        4a96df1e09db   5 minutes ago   126MB</span></span>
<span class="line"><span>app          1.0       3ed0eb4c44a5   6 hours ago     351MB</span></span>
<span class="line"><span>openjdk      8-jre     26ac3f63d29f   2 years ago     273MB</span></span>
<span class="line"><span>redis        latest    7614ae9453d1   2 years ago     113MB</span></span>
<span class="line"><span>mysql        8.0       3218b38490ce   2 years ago     516MB</span></span>
<span class="line"><span>myubuntu     01        ba6acccedd29   2 years ago     72.8MB</span></span>
<span class="line"><span>ubuntu       latest    ba6acccedd29   2 years ago     72.8MB</span></span>
<span class="line"><span>nginx        1.19.10   f0b8a9a54136   3 years ago     133MB</span></span>
<span class="line"><span>redis        6.0.9     6060df96cef3   3 years ago     104MB</span></span>
<span class="line"><span>tomcat       8.0       ef6a7c98d192   5 years ago     356MB</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#进入容器</span></span>
<span class="line"><span>root@hp-Noneroot@docker:~# docker run -it myubuntu:02</span></span>
<span class="line"><span>root@075eee432afd:/# nano abc.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种方式写法（带缓存）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>RUN [&quot;apt-get&quot;,&quot;update&quot;]</span></span>
<span class="line"><span>RUN [&quot;apt-get&quot;,&quot;install&quot;,&quot;nano&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）EXPOSE指令</strong></p><p>EXPOSE指令用于声明容器运行时监听的端口。这并不会使容器自动访问宿主机的端口，但可以帮助Docker了解哪些端口可能需要映射到宿主机。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>EXPOSE 8099</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意：<strong>这里只做声明</strong>，并不会使容器自动访问宿主机的端口。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:04 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  2.048kB</span></span>
<span class="line"><span>Step 1/4 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>Step 2/4 : RUN [&quot;apt-get&quot;,&quot;update&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; 7a1fec8ea0a1</span></span>
<span class="line"><span>Step 3/4 : RUN [&quot;apt-get&quot;,&quot;install&quot;,&quot;nano&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; a4e175415678</span></span>
<span class="line"><span>Step 4/4 : EXPOSE 8099</span></span>
<span class="line"><span> ---&gt; Running in f8752840607a</span></span>
<span class="line"><span>Removing intermediate container f8752840607a</span></span>
<span class="line"><span> ---&gt; b0a6d1baa465</span></span>
<span class="line"><span>Successfully built b0a6d1baa465</span></span>
<span class="line"><span>Successfully tagged myubuntu:04</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）WORKDIR指令</strong></p><p>WORKDIR指令用于设置容器内的工作目录。后续的RUN、CMD、ENTRYPOINT等指令都会在这个目录下执行。</p><p>下面是ubuntu进入默认的目录，如果想设置进入默认目录，可以使用WORKDIR指令。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it myubuntu:02</span></span>
<span class="line"><span>root@075eee432afd:/# pwd</span></span>
<span class="line"><span>/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如，进入默认目录为/apps</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:05 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  2.048kB</span></span>
<span class="line"><span>Step 1/5 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>Step 2/5 : RUN [&quot;apt-get&quot;,&quot;update&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; 7a1fec8ea0a1</span></span>
<span class="line"><span>Step 3/5 : RUN [&quot;apt-get&quot;,&quot;install&quot;,&quot;nano&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; a4e175415678</span></span>
<span class="line"><span>Step 4/5 : EXPOSE 8099</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; b0a6d1baa465</span></span>
<span class="line"><span>Step 5/5 : WORKDIR /apps</span></span>
<span class="line"><span> ---&gt; Running in 3b2f99c9fdb0</span></span>
<span class="line"><span>Removing intermediate container 3b2f99c9fdb0</span></span>
<span class="line"><span> ---&gt; 4ebb1ee885c6</span></span>
<span class="line"><span>Successfully built 4ebb1ee885c6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入容器，默认是/apps目录（没有该目录，会自动创建）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it myubuntu:05 </span></span>
<span class="line"><span>root@ed09308b9732:/apps#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>多层写法：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps</span></span>
<span class="line"><span>WORKDIR data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps/data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>（5）ADD指令</strong></p><p>ADD指令用于将本地文件或目录添加到容器中，并支持自动解压tar包。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps </span></span>
<span class="line"><span>WORKDIR data</span></span>
<span class="line"><span>ADD abc.txt /apps/data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把Dockerfile所在目录的abc.txt拷贝到/apps/data下，也可以直接写 ADD ./abc.txt .</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/myfile# nano abc.txt</span></span>
<span class="line"><span>#构建镜像</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:06 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  3.072kB</span></span>
<span class="line"><span>Step 1/7 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>Step 2/7 : RUN [&quot;apt-get&quot;,&quot;update&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; 7a1fec8ea0a1</span></span>
<span class="line"><span>Step 3/7 : RUN [&quot;apt-get&quot;,&quot;install&quot;,&quot;nano&quot;]</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; a4e175415678</span></span>
<span class="line"><span>Step 4/7 : EXPOSE 8099</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; b0a6d1baa465</span></span>
<span class="line"><span>Step 5/7 : WORKDIR /apps</span></span>
<span class="line"><span> ---&gt; Using cache</span></span>
<span class="line"><span> ---&gt; 4ebb1ee885c6</span></span>
<span class="line"><span>Step 6/7 : WORKDIR data</span></span>
<span class="line"><span> ---&gt; Running in c7849978de48</span></span>
<span class="line"><span>Removing intermediate container c7849978de48</span></span>
<span class="line"><span> ---&gt; 9c91630bfdba</span></span>
<span class="line"><span>Step 7/7 : ADD abc.txt /apps/data</span></span>
<span class="line"><span> ---&gt; 0ac5cdbe4658</span></span>
<span class="line"><span>Successfully built 0ac5cdbe4658</span></span>
<span class="line"><span>Successfully tagged myubuntu:06</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入容器</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it myubuntu:06</span></span>
<span class="line"><span>root@df41224c7d84:/apps/data# ls</span></span>
<span class="line"><span>abc.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思考题：下面的abc.txt文件拷贝到哪里？</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps </span></span>
<span class="line"><span>ADD abc.txt .</span></span>
<span class="line"><span>WORKDIR data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ADD可以下载</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.107/bin/apache-tomcat-9.0.107.tar.gz .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>实现文件下载，并解压，再删除tar.gz包，然后重命名</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.107/bin/apache-tomcat-9.0.107.tar.gz .</span></span>
<span class="line"><span>RUN tar -xvf apache-tomcat-9.0.107.tar.gz</span></span>
<span class="line"><span>RUN rm -rf apache-tomcat-9.0.107.tar.gz</span></span>
<span class="line"><span>RUN mv apache-tomcat-9.0.107 tomcat-9.0.107</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#构建镜像</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:07 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/catalina.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/ciphers.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/configtest.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/daemon.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/digest.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/makebase.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/setclasspath.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/shutdown.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/startup.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/tool-wrapper.sh</span></span>
<span class="line"><span>apache-tomcat-9.0.107/bin/version.sh</span></span>
<span class="line"><span> ---&gt; Removed intermediate container 1cc11e722529</span></span>
<span class="line"><span> ---&gt; 6f8e3767b912</span></span>
<span class="line"><span>Step 9/10 : RUN rm -rf apache-tomcat-9.0.107.tar.gz</span></span>
<span class="line"><span> ---&gt; Running in 841367c9532e</span></span>
<span class="line"><span> ---&gt; Removed intermediate container 841367c9532e</span></span>
<span class="line"><span> ---&gt; 137309981753</span></span>
<span class="line"><span>Step 10/10 : RUN mv apache-tomcat-9.0.107 tomcat-9.0.107</span></span>
<span class="line"><span> ---&gt; Running in 7d4d94c7f136</span></span>
<span class="line"><span> ---&gt; Removed intermediate container 7d4d94c7f136</span></span>
<span class="line"><span> ---&gt; acc5c43d4b4c</span></span>
<span class="line"><span>Successfully built acc5c43d4b4c</span></span>
<span class="line"><span>Successfully tagged myubuntu:07</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>#进入容器</span></span>
<span class="line"><span>root@hp-None:~# docker run -it myubuntu:07</span></span>
<span class="line"><span>root@4f66bf58586e:/apps/data# ls</span></span>
<span class="line"><span>abc.txt  tomcat-9.0.107</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）COPY指令</strong></p><p>COPY指令用于将本地文件或目录复制到容器中。与ADD指令相比，COPY指令只支持简单的复制操作，不支持自动解压。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>WORKDIR /apps </span></span>
<span class="line"><span>WORKDIR data</span></span>
<span class="line"><span>COPY abc.txt /apps/data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ADD 和 COPY 的区别和使用场景</strong></p><ul><li>ADD 支持添加远程 url 和自动提取压缩格式的文件，COPY 只允许从本机中复制文件</li><li>COPY 支持从其他构建阶段中复制源文件(–from)</li><li>根据官方 Dockerfile 最佳实践，除非真的需要从远程 url 添加文件或自动提取压缩文件才用 ADD，其他情况一律使用 COPY</li></ul><p><strong>注意事项</strong></p><ul><li>ADD 从远程 url 获取文件和复制的效果并不理想，因为该文件会增加 Docker Image 最终的大小。相反，应该使用 curl huo wget 来获取远程文件，然后在不需要它时进行删除</li></ul><p><strong>（7）ENV指令</strong></p><p>ENV指令用于设置环境变量。这些变量可以在后续的RUN指令中使用，也可以在容器运行时被应用使用。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#不用ENV</span></span>
<span class="line"><span>WORKDIR=/apps/data</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#使用ENV</span></span>
<span class="line"><span>ENV APP_PATH=/apps/data</span></span>
<span class="line"><span>WORKDIR $APP_PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（8）VOLUME指令</strong></p><p>VOLUME指令用于创建一个可以从容器外部访问的挂载点。这可以用于存储数据库文件、配置文件等需要持久化的数据。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#使用ENV</span></span>
<span class="line"><span>ENV APP_PATH=/apps/data</span></span>
<span class="line"><span>WORKDIR $APP_PATH</span></span>
<span class="line"><span>#这里仅仅是声明，告诉使用者容器中可以挂载这个目录到宿主机         </span></span>
<span class="line"><span>VOLUME $APP_PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#构建镜像</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:09 .</span></span>
<span class="line"><span>......</span></span>
<span class="line"><span>Step 12/12 : VOLUME $APP_PATH</span></span>
<span class="line"><span> ---&gt; Running in 7c02e13a5dac</span></span>
<span class="line"><span>Removing intermediate container 7c02e13a5dac</span></span>
<span class="line"><span> ---&gt; 54aa1c9580a9</span></span>
<span class="line"><span>Successfully built 54aa1c9580a9</span></span>
<span class="line"><span>Successfully tagged myubuntu:09</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#运行容器，并挂载数据目录</span></span>
<span class="line"><span>root@hp-None:~# docker run -v mydata:/apps/data myubuntu:09</span></span>
<span class="line"><span>#查看数据卷信息</span></span>
<span class="line"><span>root@hp-None:~# docker inspect mydata</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        &quot;CreatedAt&quot;: &quot;2024-07-25T07:50:30+08:00&quot;,</span></span>
<span class="line"><span>        &quot;Driver&quot;: &quot;local&quot;,</span></span>
<span class="line"><span>        &quot;Labels&quot;: null,</span></span>
<span class="line"><span>        &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/mydata/_data&quot;,</span></span>
<span class="line"><span>        &quot;Name&quot;: &quot;mydata&quot;,</span></span>
<span class="line"><span>        &quot;Options&quot;: null,</span></span>
<span class="line"><span>        &quot;Scope&quot;: &quot;local&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span>root@hp-None:~# cd /var/lib/docker/volumes/mydata/_data</span></span>
<span class="line"><span>root@hp-None:/var/lib/docker/volumes/mydata/_data# ls</span></span>
<span class="line"><span>abc.txt  tomcat-9.0.107</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（9）CMD指令</strong></p><p>CMD指令用于指定容器启动后要执行的命令。Dockerfile中可以包含多个CMD指令，但只有最后一个会生效。如果容器以命令行方式运行，并且提供了命令和参数，那么CMD指令指定的默认命令和参数将会被覆盖。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#直接运行jar</span></span>
<span class="line"><span>java -jar app.jar</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#json数组（推荐）</span></span>
<span class="line"><span>[&quot;java&quot;,&quot;-jar&quot;,&quot;app.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：进入容器，默认显示apps/data目录下所有文件</p><p>CMD ls /apps/data 或者 CMD ls $APP_PATH</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#构建镜像</span></span>
<span class="line"><span>root@hp-None:~/myfile# docker build -t myubuntu:10 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span>            </span></span>
<span class="line"><span>......</span></span>
<span class="line"><span>Step 13/13 : CMD ls /apps/data</span></span>
<span class="line"><span> ---&gt; Running in ae9fef4763ee</span></span>
<span class="line"><span>Removing intermediate container ae9fef4763ee</span></span>
<span class="line"><span> ---&gt; 7110fdbed963</span></span>
<span class="line"><span>Successfully built 7110fdbed963</span></span>
<span class="line"><span>Successfully tagged myubuntu:10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#运行容器</span></span>
<span class="line"><span>root@hp-None:~# docker run myubuntu:10</span></span>
<span class="line"><span>abc.txt</span></span>
<span class="line"><span>tomcat-9.0.107</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>json数组写法：CMD [“ls&quot;,&quot;/apps/data&quot;]，<strong>支持传参</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@docker:~/myfile# docker build -t myubuntu:13 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  3.584kB</span></span>
<span class="line"><span>Step 1/13 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; ba6acccedd29</span></span>
<span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#运行容器，默认为apps目录</span></span>
<span class="line"><span>root@docker:~# docker run myubuntu:13 ls /apps</span></span>
<span class="line"><span>data</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#运行容器，默认为/目录</span></span>
<span class="line"><span>root@docker:~# docker run myubuntu:13 ls /</span></span>
<span class="line"><span>apps</span></span>
<span class="line"><span>bin</span></span>
<span class="line"><span>boot</span></span>
<span class="line"><span>dev</span></span>
<span class="line"><span>etc</span></span>
<span class="line"><span>home</span></span>
<span class="line"><span>lib</span></span>
<span class="line"><span>lib32</span></span>
<span class="line"><span>lib64</span></span>
<span class="line"><span>libx32</span></span>
<span class="line"><span>media</span></span>
<span class="line"><span>mnt</span></span>
<span class="line"><span>opt</span></span>
<span class="line"><span>proc</span></span>
<span class="line"><span>root</span></span>
<span class="line"><span>run</span></span>
<span class="line"><span>sbin</span></span>
<span class="line"><span>srv</span></span>
<span class="line"><span>sys</span></span>
<span class="line"><span>tmp</span></span>
<span class="line"><span>usr</span></span>
<span class="line"><span>var</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（10）ENTRYPOINT指令</strong></p><p>ENTRYPOINT指令用于配置容器启动时的默认命令及其参数。与CMD指令类似，但ENTRYPOINT不会被docker run命令行指定的参数所覆盖，这些命令行参数会被当作参数送给ENTRYPOINT指令指定的程序。</p><p><strong>CMD和ENTRYPOINT如何使用？</strong></p><p>ENTRYPOINT用来书写固定的指令（ls /apps/data ==&gt;<strong>ls</strong>）</p><p>CMD用来传递参数（<strong>/apps/data</strong>）</p><p>注意：配合使用时必须使用json数组写法</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ENTRYPOINT [&quot;ls&quot;]</span></span>
<span class="line"><span>CMD [&quot;/apps/data&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行jar包（java -jar app.jar）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;]</span></span>
<span class="line"><span>CMD [&quot;app.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-任务实施" tabindex="-1"><a class="header-anchor" href="#_2-3-任务实施"><span>2-3 任务实施</span></a></h4><p>实施Dockerfile核心指令的使用，实施步骤如下所示。</p><p><strong>（1）准备工作</strong>：在工作目录下创建<code>test.txt</code>文件（内容自定义）。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# mkdir test</span></span>
<span class="line"><span>root@hp-None:~# cd test</span></span>
<span class="line"><span>root@hp-None:~/test# ls</span></span>
<span class="line"><span>root@hp-None:~/test# nano test.txt</span></span>
<span class="line"><span>root@hp-None:~/test# ls</span></span>
<span class="line"><span>test.txt</span></span>
<span class="line"><span>root@hp-None:~/test# nano Dockerfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）编写 Dockerfile</strong>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FROM ubuntu:latest</span></span>
<span class="line"><span># 设置环境变量</span></span>
<span class="line"><span>ENV APP_DIR=/myapp/data</span></span>
<span class="line"><span># 设置工作目录</span></span>
<span class="line"><span>WORKDIR $APP_DIR</span></span>
<span class="line"><span># 安装nano（复用基础指令）</span></span>
<span class="line"><span>RUN apt-get update &amp;&amp; apt-get install -y nano</span></span>
<span class="line"><span># 复制本地文件到容器</span></span>
<span class="line"><span>COPY test.txt .</span></span>
<span class="line"><span># 声明暴露端口</span></span>
<span class="line"><span>EXPOSE 8080</span></span>
<span class="line"><span># 声明数据挂载目录</span></span>
<span class="line"><span>VOLUME $APP_DIR</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）构建镜像</strong>：<code>docker build -t myubuntu:core .</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/test# docker build -t myubuntu:core .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  3.072kB</span></span>
<span class="line"><span>Step 1/7 : FROM ubuntu:latest</span></span>
<span class="line"><span> ---&gt; 65ae7a6f3544</span></span>
<span class="line"><span>Step 2/7 : ENV APP_DIR=/myapp/data</span></span>
<span class="line"><span> ---&gt; Running in c82d6e80c551</span></span>
<span class="line"><span> ---&gt; Removed intermediate container c82d6e80c551</span></span>
<span class="line"><span> ---&gt; ceb99dcec127</span></span>
<span class="line"><span>Step 3/7 : WORKDIR $APP_DIR</span></span>
<span class="line"><span> ---&gt; Running in eae0d4d3a5c8</span></span>
<span class="line"><span> ---&gt; Removed intermediate container eae0d4d3a5c8</span></span>
<span class="line"><span> ---&gt; 653aabec56fa</span></span>
<span class="line"><span>Step 4/7 : RUN apt-get update &amp;&amp; apt-get install -y nano</span></span>
<span class="line"><span> ---&gt; Running in 97898d72971c</span></span>
<span class="line"><span>Get:1 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]</span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）验证各指令</strong>：</p><ul><li>运行容器：docker run -it --name test-container myubuntu:core</li><li>验证 WORKDIR：执行<code>pwd</code>，应显示<code>/myapp/data</code></li><li>验证 COPY：执行<code>ls</code>，应显示<code>test.txt</code></li><li>验证 ENV：执行<code>echo $APP_DIR</code>，应显示<code>/myapp/data</code></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -it --name test-container myubuntu:core</span></span>
<span class="line"><span>root@3d060c0f7c2b:/myapp/data# pwd</span></span>
<span class="line"><span>/myapp/data</span></span>
<span class="line"><span>root@3d060c0f7c2b:/myapp/data# ls</span></span>
<span class="line"><span>test.txt</span></span>
<span class="line"><span>root@3d060c0f7c2b:/myapp/data# echo $APP_DIR </span></span>
<span class="line"><span>/myapp/data</span></span>
<span class="line"><span>root@3d060c0f7c2b:/myapp/data#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>验证 VOLUME：另开终端执行<code>docker inspect test-container</code>，查看<code>Mounts</code>部分是否包含<code>/myapp/data</code></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker inspect test-container</span></span>
<span class="line"><span></span></span>
<span class="line"><span>......</span></span>
<span class="line"><span>        &quot;Mounts&quot;: [</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                &quot;Type&quot;: &quot;volume&quot;,</span></span>
<span class="line"><span>                &quot;Name&quot;: &quot;22bd9b3c80085bae00a9f0f3355e6f07c8e64a20fe8e58aa353a9e62cab697ed&quot;,</span></span>
<span class="line"><span>                &quot;Source&quot;: &quot;/var/lib/docker/volumes/22bd9b3c80085bae00a9f0f3355e6f07c8e64a20fe8e58aa353a9e62cab697ed/_data&quot;,</span></span>
<span class="line"><span>                &quot;Destination&quot;: &quot;/myapp/data&quot;,</span></span>
<span class="line"><span>                &quot;Driver&quot;: &quot;local&quot;,</span></span>
<span class="line"><span>                &quot;Mode&quot;: &quot;&quot;,</span></span>
<span class="line"><span>                &quot;RW&quot;: true,</span></span>
<span class="line"><span>                &quot;Propagation&quot;: &quot;&quot;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        ],</span></span>
<span class="line"><span>......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>验证要点：工作目录正确、文件复制成功、环境变量生效、挂载目录存在。</p><h3 id="任务三-使用-dockerfile-部署springboot-项目" tabindex="-1"><a class="header-anchor" href="#任务三-使用-dockerfile-部署springboot-项目"><span>任务三：使用 Dockerfile 部署SpringBoot 项目</span></a></h3><h4 id="_3-1-任务描述" tabindex="-1"><a class="header-anchor" href="#_3-1-任务描述"><span>3-1 任务描述</span></a></h4><p>本任务旨在带领我们完成SpringBoot项目的容器化全流程部署。通过准备JAR包、编写Dockerfile（ENTRYPOINT+CMD）、构建镜像、配置容器网络连接数据库等步骤，我们将实现：创建自定义网络、连接MySQL容器、运行SpringBoot应用。最终，我们将通过Web访问验证项目功能（后台管理/移动端页面）。</p><h4 id="_3-2-必备知识点" tabindex="-1"><a class="header-anchor" href="#_3-2-必备知识点"><span>3-2 必备知识点</span></a></h4><p>使用AI自学Docker中自定义网络。</p><h4 id="_3-3-任务实施" tabindex="-1"><a class="header-anchor" href="#_3-3-任务实施"><span>3-3 任务实施</span></a></h4><p>使用 Dockerfile 部署SpringBoot 项目，实施步骤如下所示。</p><p>（1）上传jar</p><p>在root目录下创建app目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# mkdir app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用filezilla上传hp-demo.jar到app目录下。</p><p><img src="`+c+`" alt="image-20240724073530995"></p><p>（2）编写Dockerfile</p><p>在app目录下创建Dockerfile，并编写内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# cd app</span></span>
<span class="line"><span>root@hp-None:~/app# touch Dockerfile</span></span>
<span class="line"><span>root@hp-None:~/app# ls</span></span>
<span class="line"><span>Dockerfile</span></span>
<span class="line"><span>root@hp-None:~/app# nano Dockerfile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写Dockerfile，内容如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>FROM openjdk:8-jre</span></span>
<span class="line"><span>ENV APP_PATH=/web-app</span></span>
<span class="line"><span>WORKDIR $APP_PATH</span></span>
<span class="line"><span>ADD hp-demo.jar $APP_PATH/app.jar</span></span>
<span class="line"><span>EXPOSE 9001</span></span>
<span class="line"><span>ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;]</span></span>
<span class="line"><span>CMD [&quot;app.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）运行Dockerfile</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~/app# docker build -t app:1.0 .</span></span>
<span class="line"><span>DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span>            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span>            https://docs.docker.com/go/buildx/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Sending build context to Docker daemon  24.61MB</span></span>
<span class="line"><span>Step 1/7 : FROM openjdk:8-jre</span></span>
<span class="line"><span>8-jre: Pulling from library/openjdk</span></span>
<span class="line"><span>0e29546d541c: Pull complete </span></span>
<span class="line"><span>9b829c73b52b: Pull complete </span></span>
<span class="line"><span>cb5b7ae36172: Pull complete </span></span>
<span class="line"><span>99ce012bef04: Pull complete </span></span>
<span class="line"><span>22dc2a72d098: Pull complete </span></span>
<span class="line"><span>9c69a57e10d9: Pull complete </span></span>
<span class="line"><span>Digest: sha256:c0ab1c0631266ef9420a414726a790733a2561efc5f4fa2f9b8186f4d6b00d53</span></span>
<span class="line"><span>Status: Downloaded newer image for openjdk:8-jre</span></span>
<span class="line"><span> ---&gt; 26ac3f63d29f</span></span>
<span class="line"><span>Step 2/7 : ENV APP_PATH=/web-app</span></span>
<span class="line"><span> ---&gt; Running in d96d498cc689</span></span>
<span class="line"><span>Removing intermediate container d96d498cc689</span></span>
<span class="line"><span> ---&gt; d12ae3ddd8bb</span></span>
<span class="line"><span>Step 3/7 : WORKDIR $APP_PATH</span></span>
<span class="line"><span> ---&gt; Running in 46ba42847dc7</span></span>
<span class="line"><span>Removing intermediate container 46ba42847dc7</span></span>
<span class="line"><span> ---&gt; 77ec863f44b4</span></span>
<span class="line"><span>Step 4/7 : ADD hp-demo.jar $APP_PATH/app.jar</span></span>
<span class="line"><span> ---&gt; 3db314061c69</span></span>
<span class="line"><span>Step 5/7 : EXPOSE 9001</span></span>
<span class="line"><span> ---&gt; Running in b50a91bab707</span></span>
<span class="line"><span>Removing intermediate container b50a91bab707</span></span>
<span class="line"><span> ---&gt; 20015c8e0ec1</span></span>
<span class="line"><span>Step 6/7 : ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;]</span></span>
<span class="line"><span> ---&gt; Running in ee8cb723d997</span></span>
<span class="line"><span>Removing intermediate container ee8cb723d997</span></span>
<span class="line"><span> ---&gt; 66f32bcbdfce</span></span>
<span class="line"><span>Step 7/7 : CMD [&quot;app.jar&quot;]</span></span>
<span class="line"><span> ---&gt; Running in 15b73eba0eb6</span></span>
<span class="line"><span>Removing intermediate container 15b73eba0eb6</span></span>
<span class="line"><span> ---&gt; afbac44043a4</span></span>
<span class="line"><span>Successfully built afbac44043a4</span></span>
<span class="line"><span>Successfully tagged app:1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看镜像</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker images</span></span>
<span class="line"><span>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span></span>
<span class="line"><span>app          1.0       afbac44043a4   2 minutes ago   298MB</span></span>
<span class="line"><span>openjdk      8-jre     26ac3f63d29f   2 years ago     273MB</span></span>
<span class="line"><span>redis        latest    7614ae9453d1   2 years ago     113MB</span></span>
<span class="line"><span>mysql        8.0       3218b38490ce   2 years ago     516MB</span></span>
<span class="line"><span>nginx        1.19.10   f0b8a9a54136   3 years ago     133MB</span></span>
<span class="line"><span>redis        6.0.9     6060df96cef3   3 years ago     104MB</span></span>
<span class="line"><span>tomcat       8.0       ef6a7c98d192   5 years ago     356MB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在运行app容器可以吗？</p><p>（4）创建数据库</p><p>使用Navicat连接数据库，创建zhiyihui数据库，然后导入zhiyihui.sql</p><p><img src="`+t+`" alt="image-20240724081956253"></p><p>（5）创建网络</p><p>容器是相互隔离的，要app.jar能连接到mysql，需要他们在同一网络下。</p><p>创建网络：docker network create 网络名称</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#创建网络</span></span>
<span class="line"><span>root@hp-None:~# docker network create mynetwork</span></span>
<span class="line"><span>fd8d4ffba57810e798913b756d9a68b27b28a4536153034932ab9d05429c26a2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mysql连接到自定义网络</p><p>连接自定义网络：docker network connect 网络名称 容器ID|容器名称</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE           COMMAND                   CREATED        STATUS        PORTS                                                  NAMES</span></span>
<span class="line"><span>d53a155b1dd1   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   22 hours ago   Up 22 hours   80/tcp, 0.0.0.0:8099-&gt;8088/tcp, :::8099-&gt;8088/tcp      nginx02</span></span>
<span class="line"><span>cc2fef6311e9   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   22 hours ago   Up 22 hours   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp                      nginx01</span></span>
<span class="line"><span>834a021d5e54   redis:6.0.9     &quot;docker-entrypoint.s…&quot;   25 hours ago   Up 25 hours   0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp              redis03</span></span>
<span class="line"><span>02e6eb10762f   mysql:8.0       &quot;docker-entrypoint.s…&quot;   2 days ago     Up 2 days     0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql8-02</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#mysql连接到mynetwork</span></span>
<span class="line"><span>root@hp-None:~# docker network connect mynetwork 02e6eb10762f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看自定义网络信息</p><p>docker inspect 网络名称</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#mysql连接到mynetwork</span></span>
<span class="line"><span>root@hp-None:~# docker inspect mynetwork</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        &quot;Name&quot;: &quot;mynetwork&quot;,</span></span>
<span class="line"><span>        &quot;Id&quot;: &quot;fd8d4ffba57810e798913b756d9a68b27b28a4536153034932ab9d05429c26a2&quot;,</span></span>
<span class="line"><span>        &quot;Created&quot;: &quot;2024-07-24T08:26:16.117157077+08:00&quot;,</span></span>
<span class="line"><span>        &quot;Scope&quot;: &quot;local&quot;,</span></span>
<span class="line"><span>        &quot;Driver&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span>        &quot;EnableIPv6&quot;: false,</span></span>
<span class="line"><span>        &quot;IPAM&quot;: {</span></span>
<span class="line"><span>            &quot;Driver&quot;: &quot;default&quot;,</span></span>
<span class="line"><span>            &quot;Options&quot;: {},</span></span>
<span class="line"><span>            &quot;Config&quot;: [</span></span>
<span class="line"><span>                {</span></span>
<span class="line"><span>                    &quot;Subnet&quot;: &quot;172.18.0.0/16&quot;,</span></span>
<span class="line"><span>                    &quot;Gateway&quot;: &quot;172.18.0.1&quot;</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            ]</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;Internal&quot;: false,</span></span>
<span class="line"><span>        &quot;Attachable&quot;: false,</span></span>
<span class="line"><span>        &quot;Ingress&quot;: false,</span></span>
<span class="line"><span>        &quot;ConfigFrom&quot;: {</span></span>
<span class="line"><span>            &quot;Network&quot;: &quot;&quot;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;ConfigOnly&quot;: false,</span></span>
<span class="line"><span>        &quot;Containers&quot;: {</span></span>
<span class="line"><span>            &quot;02e6eb10762f7d4f7ca8217e1c2993e0c6883874e423df26afcda361e3b767f4&quot;: {</span></span>
<span class="line"><span>                &quot;Name&quot;: &quot;mysql8-02&quot;,</span></span>
<span class="line"><span>                &quot;EndpointID&quot;: &quot;42415a5a07e83ccc004dec1b60b4b1ac47d9f5e38de76b2002f0a833fbe03ff8&quot;,</span></span>
<span class="line"><span>                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:02&quot;,</span></span>
<span class="line"><span>                &quot;IPv4Address&quot;: &quot;172.18.0.2/16&quot;,</span></span>
<span class="line"><span>                &quot;IPv6Address&quot;: &quot;&quot;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;Options&quot;: {},</span></span>
<span class="line"><span>        &quot;Labels&quot;: {}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【同理redis也需加入网络】</strong></p><p>（6）运行项目</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker run -d -p 9001:8088 --name webapp app:1.0</span></span>
<span class="line"><span>5dc7cca24bcb9b2b97b38e2bede0c37c170b37906c255f9289e27216d18799a7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看运行日志：docker logs -f 容器ID</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE           COMMAND                   CREATED              STATUS              PORTS                                                  NAMES</span></span>
<span class="line"><span>5dc7cca24bcb   app:1.0         &quot;java -jar app.jar&quot;       About a minute ago   Up About a minute   0.0.0.0:9001-&gt;9001/tcp, :::9001-&gt;9001/tcp              webapp</span></span>
<span class="line"><span>d53a155b1dd1   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   22 hours ago         Up 22 hours         80/tcp, 0.0.0.0:8099-&gt;8088/tcp, :::8099-&gt;8088/tcp      nginx02</span></span>
<span class="line"><span>cc2fef6311e9   nginx:1.19.10   &quot;/docker-entrypoint.…&quot;   22 hours ago         Up 22 hours         0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp                      nginx01</span></span>
<span class="line"><span>834a021d5e54   redis:6.0.9     &quot;docker-entrypoint.s…&quot;   25 hours ago         Up 25 hours         0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp              redis03</span></span>
<span class="line"><span>02e6eb10762f   mysql:8.0       &quot;docker-entrypoint.s…&quot;   2 days ago           Up 2 days           0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql8-02</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#查看日志</span></span>
<span class="line"><span>root@hp-None:~# docker logs -f 5dc7cca24bcb</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  .   ____          _            __ _ _</span></span>
<span class="line"><span> /\\\\ / ___&#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</span></span>
<span class="line"><span>( ( )\\___ | &#39;_ | &#39;_| | &#39;_ \\/ _\` | \\ \\ \\ \\</span></span>
<span class="line"><span> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span></span>
<span class="line"><span>  &#39;  |____| .__|_| |_|_| |_\\__, | / / / /</span></span>
<span class="line"><span> =========|_|==============|___/=/_/_/_/</span></span>
<span class="line"><span> :: Spring Boot ::                (v2.7.6)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2024-07-24 00:46:46.921  INFO 1 --- [           main] com.hp.demo.HpDemoApplication            : Starting HpDemoApplication using Java 1.8.0_312 on 5dc7cca24bcb with PID 1 (/web-app/app.jar started by root in /web-app)</span></span>
<span class="line"><span>2024-07-24 00:46:46.953  INFO 1 --- [           main] com.hp.demo.HpDemoApplication            : No active profile set, falling back to 1 default profile: &quot;default&quot;</span></span>
<span class="line"><span>2024-07-24 00:46:51.159  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9001 (http)</span></span>
<span class="line"><span>2024-07-24 00:46:51.204  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]</span></span>
<span class="line"><span>2024-07-24 00:46:51.205  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.69]</span></span>
<span class="line"><span>2024-07-24 00:46:51.466  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</span></span>
<span class="line"><span>2024-07-24 00:46:51.468  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4320 ms</span></span>
<span class="line"><span>2024-07-24 00:46:52.763  INFO 1 --- [           main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]</span></span>
<span class="line"><span>2024-07-24 00:46:53.326  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9001 (http) with context path &#39;&#39;</span></span>
<span class="line"><span>2024-07-24 00:46:53.367  INFO 1 --- [           main] com.hp.demo.HpDemoApplication            : Started HpDemoApplication in 7.795 seconds (JVM running for 8.923)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>app项目加入网络</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>root@hp-None:~# docker network connect mynetwork 5dc7cca24bcb</span></span>
<span class="line"><span>root@hp-None:~# docker inspect mynetwork</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        &quot;Name&quot;: &quot;mynetwork&quot;,</span></span>
<span class="line"><span>        &quot;Id&quot;: &quot;fd8d4ffba57810e798913b756d9a68b27b28a4536153034932ab9d05429c26a2&quot;,</span></span>
<span class="line"><span>        &quot;Created&quot;: &quot;2024-07-24T08:26:16.117157077+08:00&quot;,</span></span>
<span class="line"><span>        &quot;Scope&quot;: &quot;local&quot;,</span></span>
<span class="line"><span>        &quot;Driver&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span>        &quot;EnableIPv6&quot;: false,</span></span>
<span class="line"><span>        &quot;IPAM&quot;: {</span></span>
<span class="line"><span>            &quot;Driver&quot;: &quot;default&quot;,</span></span>
<span class="line"><span>            &quot;Options&quot;: {},</span></span>
<span class="line"><span>            &quot;Config&quot;: [</span></span>
<span class="line"><span>                {</span></span>
<span class="line"><span>                    &quot;Subnet&quot;: &quot;172.18.0.0/16&quot;,</span></span>
<span class="line"><span>                    &quot;Gateway&quot;: &quot;172.18.0.1&quot;</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            ]</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;Internal&quot;: false,</span></span>
<span class="line"><span>        &quot;Attachable&quot;: false,</span></span>
<span class="line"><span>        &quot;Ingress&quot;: false,</span></span>
<span class="line"><span>        &quot;ConfigFrom&quot;: {</span></span>
<span class="line"><span>            &quot;Network&quot;: &quot;&quot;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;ConfigOnly&quot;: false,</span></span>
<span class="line"><span>        &quot;Containers&quot;: {</span></span>
<span class="line"><span>            &quot;02e6eb10762f7d4f7ca8217e1c2993e0c6883874e423df26afcda361e3b767f4&quot;: {</span></span>
<span class="line"><span>                &quot;Name&quot;: &quot;mysql8-02&quot;,</span></span>
<span class="line"><span>                &quot;EndpointID&quot;: &quot;42415a5a07e83ccc004dec1b60b4b1ac47d9f5e38de76b2002f0a833fbe03ff8&quot;,</span></span>
<span class="line"><span>                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:02&quot;,</span></span>
<span class="line"><span>                &quot;IPv4Address&quot;: &quot;172.18.0.2/16&quot;,</span></span>
<span class="line"><span>                &quot;IPv6Address&quot;: &quot;&quot;</span></span>
<span class="line"><span>            },</span></span>
<span class="line"><span>            &quot;5dc7cca24bcb9b2b97b38e2bede0c37c170b37906c255f9289e27216d18799a7&quot;: {</span></span>
<span class="line"><span>                &quot;Name&quot;: &quot;webapp&quot;,</span></span>
<span class="line"><span>                &quot;EndpointID&quot;: &quot;62b12e23aaa3d61a38ccb34dec53128127bf17e60f5cfa5922560d91f38f133f&quot;,</span></span>
<span class="line"><span>                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:03&quot;,</span></span>
<span class="line"><span>                &quot;IPv4Address&quot;: &quot;172.18.0.3/16&quot;,</span></span>
<span class="line"><span>                &quot;IPv6Address&quot;: &quot;&quot;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;Options&quot;: {},</span></span>
<span class="line"><span>        &quot;Labels&quot;: {}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（7）访问项目</p><p>http://192.168.6.136:9001/login.html</p><p>后台登录</p><p><img src="`+r+'" alt=""></p><p>检查项管理</p><p><img src="'+u+'" alt=""></p><p>http://192.168.6.136:9001/mobile/pages/index.html</p><p>移动端首页</p><p><img src="'+v+'" alt=""></p><p>套餐列表</p><p><img src="'+o+'" alt=""></p>',216)]))}const k=n(b,[["render",m]]),f=JSON.parse('{"path":"/article/hvuv3nvu/","title":"使用Dockerfile构建应用 ","lang":"zh-CN","frontmatter":{"title":"使用Dockerfile构建应用 ","createTime":"2025/08/15 14:06:38","permalink":"/article/hvuv3nvu/"},"readingTime":{"minutes":19.29,"words":5787},"git":{"createdTime":1754385901000,"updatedTime":1755240741000,"contributors":[{"name":"elvishehai521@163.com","username":"","email":"elvishehai521@163.com","commits":2,"avatar":"https://gravatar.com/avatar/6a640db68c5bf3768af7413cb28623721edb88b0f88957ed42c162769c5f659c?d=retro"}]},"filePathRelative":"notes/docker/使用Dockerfile构建应用 .md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"154f33","sort":10001,"name":"docker"}]}');export{k as comp,f as data};
